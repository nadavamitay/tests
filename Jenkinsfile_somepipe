// Define pipeline parameters
properties([parameters([string(defaultValue: '', name: 'BUILD_ENV')])])

node {
    // Define the version based on build number and date
    env.BUILD_ENV = params.BUILD_ENV
    def buildVersion = "1.0.0-${env.BUILD_NUMBER}"
    echo "Build Version: ${buildVersion}"

    stage("initialization") {
        echo "Initializing pipeline..."
        checkout scmGit(branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/nadavamitay/tests.git']])
    }
    
    stage("building") {
        echo "Building the project..."

        def parallelTasks = [:] // Initialize an empty map for parallel tasks

        // Define tasks based on BUILD_ENV
        if (env.BUILD_ENV == 'componentA' || env.BUILD_ENV == '') {
            parallelTasks["Building component A"] = {
                echo "Building component A with version ${buildVersion} for environment ${env.ENVIRONMENT}"
                // Simulate building component A
            }
        }
        
        if (env.BUILD_ENV == 'componentB' || env.BUILD_ENV == '') {
            parallelTasks["Building component B"] = {
                echo "Building component B with version ${buildVersion} for environment ${env.ENVIRONMENT}"
                // Simulate building component B
            }
        }
        
        // Execute parallel tasks
        parallel parallelTasks
    }

    stage("post-build") {
        echo "Post-build actions..."
        
        // Archive artifacts
        archiveArtifacts artifacts: '**/README.md', allowEmptyArchive: true
        


    }
}
